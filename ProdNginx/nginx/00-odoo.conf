map $http_upgrade $connection_upgrade {        # Si llega cabecera Upgrade, lo marca como 'upgrade'; si no, 'close'
    default upgrade;
    ''      close;
}

upstream odoo_http {                           # Agrupa el tráfico HTTP normal hacia Odoo (puerto 8069)
    server odoo:8069;
}

upstream odoo_ws {                             # Agrupa el tráfico WebSocket hacia Odoo (puerto 8072)
    server odoo:8072;
}

server {
    listen 8169;                               # Escucha peticiones en el puerto 8169
    server_name _;                             # Acepta cualquier nombre de servidor

    # Reenvía cabeceras útiles al backend
    proxy_set_header Host              $host:$server_port;        # Mantiene host y puerto originales
    proxy_set_header X-Real-IP         $remote_addr;              # Pasa la IP real del cliente
    proxy_set_header X-Forwarded-For   $proxy_add_x_forwarded_for;# Cadena de IPs por donde pasó
    proxy_set_header X-Forwarded-Proto $scheme;                   # Indica si fue HTTP o HTTPS

    location /websocket {                          # Ruta para WebSockets
        proxy_pass http://odoo_ws;                 # Envía a upstream odoo_ws
    }

    location / {                                   # Rutas normales de la web de Odoo
        proxy_pass http://odoo_http;               # Envía a upstream odoo_http
        # deny all;                                  # Bloquea el acceso directo
        allow all;                                  # Permite el acceso
    }

    location /api {                                # Endpoints de API
        proxy_pass http://odoo_http;               # Envía a upstream odoo_http
        allow all;                                 # Permite el acceso
    }
}
